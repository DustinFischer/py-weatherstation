version: "3.7"
services:
  mosquitto:
    image: eclipse-mosquitto:2
    volumes:
      - ./config/:/mosquitto/config/:rw
      - ./log/:/mosquitto/log/
      - mosquittodata:/mosquitto/data/
    ports:
      - "1883:1883"
      - "9001:9001"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    #    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeperdata:/var/lib/zookeeper/data
      - zookeeperlog:/var/lib/zookeeper/log

  esphome:
    container_name: esphome
    image: esphome/esphome
    volumes:
      - ~/esphome:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
#    network_mode: host
    ports:
      - "6052:6052"
    environment:
      ESPHOME_DASHBOARD_USE_PING: "true"

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ~/hassio:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    ports:
      - "8123:8123"
    depends_on:
      - esphome
#      - mosquitto
#    WILL BE REQUIRED ON LINUX SYSTEM? ... Raspberrey Pi
#    network_mode: host
#    privileged: true

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    #    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafkadata:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    #    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: "PLAINTEXT"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DEBUG: "true"
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: "backward"
      SCHEMA_REGISTRY_TOPIC_REPLICATION_FACTOR: 1

  connect:
    image: confluentinc/cp-kafka-connect:7.3.2
#    image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
    hostname: connect
    #    container_name: connect
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - mosquitto
      - homeassistant
    ports:
      - "8083:8083"
    environment:
      # https://docs.confluent.io/2.0.0/connect/userguide.html#configuring-workers
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_GROUP_ID: connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config-storage
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset-storage
      CONNECT_STATUS_STORAGE_TOPIC: connect-status-storage
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/usr/local/share/kafka/plugins,/usr/share/filestream-connectors,/etc/kafka-connect/jars"

    volumes:
      - ${PWD}/eventbus/connect/config/data:/data
#      - ./connect/config/data:/data
      - /tmp/custom/jars:/etc/kafka-connect/jars

  deps:
    image: alpine
    command: sh -c "exit 0"
    restart: "no"
    depends_on:
      - homeassistant
      - mosquitto
      - zookeeper
      - kafka
      - schema-registry
      - connect


volumes:
  mosquittodata:
  zookeeperdata:
  zookeeperlog:
  kafkadata: