substitutions:
  device_name: dht11
  friendly_name: dht11
  time_id: homeassistant_time
  collection: weatherstation
  collection_id: "1"
  device_id: 04a601d259ed428e856194a00ab981b9

esphome:
  name: "environment"
  on_boot:
    if:
      condition:
        time.has_time:
      then:
        - logger.log: Time has been set and is valid!

esp32:
  board: esp32dev
  framework:
    type: arduino

time:
  - platform: homeassistant
    id: ${time_id}
    timezone: Africa/Johannesburg
    on_time:
      # Every 1 minute
      - seconds: /2
#        minutes:
        then:
          # publish weather data to MQTT topic
          - mqtt.publish_json:
              topic: ${collection}/${collection_id}/humiture/${device_id}/state
              payload: |-
                root["eventTs"] = id(${time_id}).timestamp_now();
                root["deviceID"] = "${device_id}";
                root["temperature"] = id(t${device_id}).state;
                root["humidity"] = id(h${device_id}).state;

#                JsonObject schema = root.createNestedObject("schema");
#                schema["type"] = "struct";
#                JsonArray fields = schema.createNestedArray("fields");
#                JsonObject field_id = fields.createNestedObject();
#                field_id["type"] = "string";
#                field_id["optional"] = false;
#                field_id["field"] = "id";
#                JsonObject payload = root.createNestedObject("payload");
#                payload["id"] = "${device_id}";



# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Fxrd/DvnOzlFKJcCjIFN3wIPoyZM8ztWVNC14NsdlDE="

ota:
  password: "1e8d414b457fec661ed769ec370213de"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Atmosphere Fallback Hotspot"

    password: "TxsutQhImQKm"

captive_portal:

sensor:
  - platform: dht
    pin: GPIO23
    model: DHT11
    update_interval: 60s

    humidity:
      name: "Ambient Humidity"
      id: "h${device_id}"

    temperature:
      name: "Ambient Temperature"
      id: "t${device_id}"

mqtt:
  # note there are logging topics etc, see MQTT componet ESP32
  topic_prefix: weatherstation   # will prodcue readings by default to a state topic: <prefix>/<component_type>/<component_name>/state
  discovery: false
  broker: 192.168.0.163  # NB this is the ip of the server serving mosquitto broker, in this case it is my Mac's IP address (get from wifi info)
  port: 1883
  username: admin
  password: admin
#  name: "Component Name"
#  # Optional variables:
#  retain: true
#  availability:
#    topic: livingroom/status
#    payload_available: online
#    payload_not_available: offline
#  state_topic: livingroom/custom_state_topic
#  command_topic: livingroom/custom_command_topic
#  command_retain: false